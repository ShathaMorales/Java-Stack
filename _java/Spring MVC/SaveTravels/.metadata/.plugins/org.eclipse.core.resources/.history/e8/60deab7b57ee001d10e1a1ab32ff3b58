package com.codingdojo.savetravels.controllers;

import java.util.List;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;


import jakarta.validation.Valid;

@Controller
public class ExpenseController {
    private final ExpenseService expenseService;
    
    public ExpenseController (ExpenseService expenseService){
        this.expenseService = expenseService;
    }
    
    @GetMapping("/")
    public String newExpense(@ModelAttribute("expense") Expense expense, Model model) {
    	List<Expense> allexpenses = expenseService.allExpenses();
        model.addAttribute("allexpenses", allexpenses);
             return "index.jsp";
        }
    
    @PostMapping("/burger")
    public String addExpense(@Valid @ModelAttribute("burger") Expense expense, BindingResult result, Model model) {
    	if (result.hasErrors()) {
        	List<Expense> allexpenses = expenseService.allExpenses();
            model.addAttribute("allexpenses", allexpenses);          
        	return "index.jsp";
        } else {
        	expenseService.addExpense(expense);
            return "redirect:/";
        }
    }

        @RequestMapping("/burgers/edit/{id}")
        public String editExpense(@PathVariable("id") Long id, @ModelAttribute ("burger") Expense expense, Model model) {
            model.addAttribute("burger", expenseService.findBurger(id));
            return "edit.jsp";
        }
        
        @RequestMapping(value="/burgers/edit/{id}", method=RequestMethod.PUT)
        public String updateExpense(@Valid @ModelAttribute("burger") Expense expense, BindingResult result, @PathVariable("id") Long id, Model model) {
            if (result.hasErrors()) {
                model.addAttribute("expense", expense);
                return "index.jsp";
            } else {
            	expenseService.updateExpense(expense);
                return "redirect:/";
            }
        }
}
