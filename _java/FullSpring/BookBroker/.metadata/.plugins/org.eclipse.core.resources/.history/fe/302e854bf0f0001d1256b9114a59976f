package com.codingdojo.loginregistration.controllers;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;

import com.codingdojo.loginregistration.models.Book;
import com.codingdojo.loginregistration.models.LoginUser;
import com.codingdojo.loginregistration.models.User;
import com.codingdojo.loginregistration.services.BookService;
import com.codingdojo.loginregistration.services.UserService;

import jakarta.servlet.http.HttpSession;
import jakarta.validation.Valid;

@Controller
public class HomeController {
    
    // Add once service is implemented
    @Autowired
    private UserService userServ;
    
	@Autowired
	public BookService bookService;
    
    @GetMapping("/")
    public String index(Model model) {
    
        // Bind empty User and LoginUser objects to the JSP
        // to capture the form input
        model.addAttribute("newUser", new User());
        model.addAttribute("newLogin", new LoginUser());
        return "index.jsp";
    }
    
    @PostMapping("/register")
    public String register(@Valid @ModelAttribute("newUser") User newUser, 
            BindingResult result, Model model, HttpSession session) {
        // Call a register method in the service 
        // to do some extra validations and create a new user!
    	userServ.register(newUser, result);        
        if(result.hasErrors()) {
            // Send in the empty LoginUser before 
            // re-rendering the page.
            model.addAttribute("newLogin", new LoginUser());
            return "index.jsp";
        }
        // No errors! 
        // Store their ID from the DB in session, 
        // in other words, log them in
        session.setAttribute("user_id", newUser.getId());
        return "redirect:/home";
    }
    
    @PostMapping("/login")
    public String login(@Valid @ModelAttribute("newLogin") LoginUser newLogin, 
            BindingResult result, Model model, HttpSession session) {
        // Add once service is implemented
        User user = userServ.login(newLogin, result);
        if(result.hasErrors()) {
            model.addAttribute("newUser", new User());
            return "index.jsp";
        }
        // No errors! 
        // Store their ID from the DB in session, 
        // in other words, log them in.
        session.setAttribute("user_id", user.getId());
        return "redirect:/home";
    }
    
	 @GetMapping("/home")
	    public String home(Model model, HttpSession session) {
	    	Long user_id = (Long) session.getAttribute("user_id");
	    	User thisUser = userServ.findUserById(user_id);
	        model.addAttribute("thisUser", thisUser);
	        return "home.jsp";
	    }

//	@GetMapping("/books")
//	public String Dashboard (Model model, HttpSession session) {
//		if (session.getAttribute("user_id") != null) {
//			List <Book> books  = bookService.allBooks();
//			model.addAttribute("books", books);
//			model.addAttribute("user", session.getAttribute("user_id"));
//			return "home.jsp";
//		}else {
//			return "redirect:/";
//		}
//		
//	}
    
//	@GetMapping("/books")
//	public String dashBoard (Model model, HttpSession session) {
//		if (session.getAttribute("user_id") != null) {
//			Long user_id = (Long) session.getAttribute("user_id");
//			User thisUser = userServ.findUserById(user_id);
//			model.addAttribute("thisUser", thisUser);
//			List <Book> books  = bookService.allBooks();
//			model.addAttribute("books", books);
//			return "home.jsp";
//		}else {
//			return "redirect:/";
//		}
//		
//	}
		
//	@GetMapping("/books/new")
//	public String newForm(@ModelAttribute("book") Book book, HttpSession session, Model model) {
//		if (session.getAttribute("user_id") != null) {
//			model.addAttribute("user", session.getAttribute("user_id"));
//			return "BookForm.jsp";
//		}
//		else {
//			return "redirect:/";
//		}
//		
//	}
//
//	@PostMapping("/books/new")
//	public String createBook(@Valid @ModelAttribute("book") Book book, BindingResult result, HttpSession session, Model model) {
//		if (session.getAttribute("user_id") != null) {
//			if (result.hasErrors()) {
//				model.addAttribute("user", session.getAttribute("user_id"));
//				return "BookForm.jsp";
//			}else {
//				bookService.addBook(book);
//				return "redirect:/books";
//			}
//		}
//		else {
//			return "redirect:/";
//		}		
//	}
	 
	 @GetMapping("/logout")
	 public String logout(HttpSession session) { 
	         session.invalidate();
	         return "redirect:/";
	        
	    }
	    	 
    
}